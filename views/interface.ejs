<script>
	document.body.append(cursor);

	document.body.addEventListener("click", async function(event){
		if(!focused){
			await document.body.requestPointerLock();
			focused = true;
			return;
		}

		if(event.button == 2) return;
		var elem = document.elementFromPoint(...cursorPosition);
		if(!elem?.classList?.contains("selectable")) return document.querySelectorAll("input").forEach((e) => e.blur());
		if(event.button != 0) return;
		
		if(functions[elem.id]) functions[elem.id]();
	});

	document.body.addEventListener("mousemove", function(event){
		if(!focused) return;
		if(scrolling){
			document.querySelector("content > container").scrollTop += event.movementY;
			document.querySelector("content > container").scrollLeft += event.movementX;
			return;
		}

		cursorPosition[0] = Math.max(0, Math.min(window.innerWidth, cursorPosition[0] + event.movementX));
		cursorPosition[1] = Math.max(0, Math.min(window.innerHeight, cursorPosition[1] + event.movementY));
		var elem = document.elementFromPoint(...cursorPosition);

		if(!elem?.classList?.contains("selectable") || elem?.classList?.contains("nohover")){
			cursor.style.setProperty("--width", "4vh");
			cursor.style.setProperty("--height", "4vh");
			cursor.style.setProperty("--border-radius", "50%");
			return setPosition();
		}

		var rect = elem.getBoundingClientRect();
		var width = rect.right - rect.left;
		var height = rect.bottom - rect.top;
		cursor.style.setProperty("--width", `${width}px`);
		cursor.style.setProperty("--height", `${height}px`);
		cursor.style.setProperty("--border-radius", getComputedStyle(document.querySelector(`#${elem.id}`))["border-radius"]);

		setPosition(rect.left + rect.width/2, rect.top + rect.height/2);
	});

	document.body.addEventListener("mousedown", function(event){
		if(!focused) return;
		var elem = document.getElementById(document.elementFromPoint(...cursorPosition).id);
		if(!elem?.classList?.contains("selectable")) return;
		if(event.button == 2){
			scrolling = true;
			document.body.addEventListener("mouseup", function(){
				scrolling = false;
			});
		}else if(!elem?.classList?.contains("noclick")){
			var temp = elem.style.background;
			elem.style.background = "rgba(255, 255, 255, 0.6)";
			document.body.addEventListener("mouseup", function(event){
				if(event.button != 2) elem.style.background = temp;
			});
		}
	});

	document.body.addEventListener("wheel", function(event){
		if(!focused) return;
		volume = Math.max(0, Math.min(100, volume - event.deltaY/50));
		document.querySelector("volume").style.setProperty("--volume", volume);
		document.querySelector("volume > text").innerText = parseInt(volume);
		document.querySelector("volume").setAttribute("show", "1");
		if(setVolume) clearTimeout(setVolume);
		setVolume = setTimeout(function(){
			document.querySelector("volume").setAttribute("show", "0");
			setVolume = false;
		}, 1000);
	});

	document.addEventListener("pointerlockchange", function(){
		if(document.pointerLockElement != document.body) focused = false;
	});

	var animateCursor = setInterval(function(){
		var size = ["farthest-corner", "closest-side", "closest-corner", "farthest-side"][Math.floor(Math.random() * 4)];
		var inner = Math.random() * 0.3 + 0.1;
		var outer = inner + Math.random() * 0.3;
		
		cursor.style.setProperty("--gradient-x", `${Math.random() * 70 + 30}%`);
		cursor.style.setProperty("--gradient-y", `${Math.random() * 70 + 30}%`);
		cursor.style.setProperty("--gradient-inner", `rgba(255, 255, 255, ${inner})`);
		cursor.style.setProperty("--gradient-outer", `rgba(255, 255, 255, ${outer})`);
	}, 3200);

	setPosition();
	drawKeys();

	functions = {
		k42: () => {
			caps = (caps + 1) % 3;
			drawKeys();
		},
		k43: generateKeyFunction(" "),
		k44: () => {
			if(!caps){
				document.getElementById("search").value = document.getElementById("search").value.slice(0, -1);
			}else{
				document.getElementById("search").value = "";
			}
			if(caps == 1){
				caps--;
				drawKeys();
			}
			updateContent();
		},
		search: () => document.getElementById("search").focus(),
		toggle: () => document.querySelector("search").setAttribute("collapsed", Boolean(1 - (document.querySelector("search").getAttribute("collapsed") == "true")).toString()),
		home: () => {
			channel = 0;
			document.getElementById("search").value = "";
			updateContent();
		}
	}

	for(var i = 0; i < keys.length; i++) functions[`k${i}`] = generateKeyFunction(keys[i]);
	updateContent();
</script>