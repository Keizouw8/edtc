<script>
	var cursor = document.createElement("cursor");
	var cursorPosition = [window.innerWidth/2, window.innerHeight/2];
	var keys = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "!", "@", "#", "$", "%", "&"];
	var caps = 0;
	var typing = 0;
	var loading = 0;
	var channel = 0;
	var focused = false;
	var functions = {};
	var channels = [
		{
			title: "Every Day Television Client",
			async search(){
				return [{
					id: 1,
					title: "YouTube",
					subtitle: "Sam Altman",
					image: "/static/youtube.png"
				}]
			},
			functionality(id){
				channel = id;
				document.getElementById("search").value = "";
				document.querySelector("search").setAttribute("collapsed", "true");
				updateContent();
			}
		},
		{
			title: "YouTube",
			async search(query){
				var response = await fetch(`/yt?query=${query}`, {
					method: "POST",
				});
				var videos = await response.json();
				return videos;
			},
			functionality(id){}
		}
	]

	document.body.append(cursor);

	document.body.addEventListener("click", async function(event){
		if(!focused){
			await document.body.requestPointerLock();
			focused = true;
			return;
		}

		var elem = document.elementFromPoint(...cursorPosition);
		if(!elem?.classList?.contains("selectable")) return document.querySelectorAll("input").forEach((e) => e.blur());
		if(event.button != 0) return;
		
		if(functions[elem.id]) functions[elem.id]();
	});

	document.body.addEventListener("mousemove", function(event){
		if(!focused) return;
		cursorPosition[0] = Math.max(0, Math.min(window.innerWidth, cursorPosition[0] + event.movementX));
		cursorPosition[1] = Math.max(0, Math.min(window.innerHeight, cursorPosition[1] + event.movementY));
		var elem = document.elementFromPoint(...cursorPosition);

		if(!elem?.classList?.contains("selectable") || elem?.classList?.contains("nohover")){
			cursor.style.setProperty("--width", "4vh");
			cursor.style.setProperty("--height", "4vh");
			cursor.style.setProperty("--border-radius", "50%");
			return setPosition();
		}

		var rect = elem.getBoundingClientRect();
		var width = rect.right - rect.left;
		var height = rect.bottom - rect.top;
		cursor.style.setProperty("--width", `${width}px`);
		cursor.style.setProperty("--height", `${height}px`);
		cursor.style.setProperty("--border-radius", getComputedStyle(document.querySelector(`#${elem.id}`))["border-radius"]);

		setPosition(rect.left + rect.width/2, rect.top + rect.height/2);
	});
	
	document.body.addEventListener("mousedown", function(event){
		var elem = document.getElementById(document.elementFromPoint(...cursorPosition).id);
		if(!elem?.classList?.contains("selectable")) return;
		if(event.button != 0) return;
		if(!elem?.classList?.contains("noclick")){
			var temp = elem.style.background;
			elem.style.background = "rgba(255, 255, 255, 0.6)";
			document.body.addEventListener("mouseup", function(){
				elem.style.background = temp;
			});
		}
	});
	
	document.addEventListener("pointerlockchange", function(){
		if(document.pointerLockElement != document.body) focused = false;
	});
	
	var animateCursor = setInterval(function(){
		var size = ["farthest-corner", "closest-side", "closest-corner", "farthest-side"][Math.floor(Math.random() * 4)];
		var inner = Math.random() * 0.3 + 0.1;
		var outer = inner + Math.random() * 0.3;
		
		cursor.style.setProperty("--gradient-x", `${Math.random() * 70 + 30}%`);
		cursor.style.setProperty("--gradient-y", `${Math.random() * 70 + 30}%`);
		cursor.style.setProperty("--gradient-inner", `rgba(255, 255, 255, ${inner})`);
		cursor.style.setProperty("--gradient-outer", `rgba(255, 255, 255, ${outer})`);
	}, 3200);

	setPosition();
	drawKeys();

	functions = {
		k42: () => {
			caps = (caps + 1) % 3;
			drawKeys();
		},
		k43: generateKeyFunction(" "),
		k44: () => {
			document.getElementById("search").value = document.getElementById("search").value.slice(0, -1);
			updateContent();
		},
		search: () => document.getElementById("search").focus(),
		toggle: () => document.querySelector("search").setAttribute("collapsed", Boolean(1 - (document.querySelector("search").getAttribute("collapsed") == "true")).toString()),
		home: () => {
			channel = 0;
			document.getElementById("search").value = "";
			updateContent();
		}
	}
	
	for(var i = 0; i < keys.length; i++) functions[`k${i}`] = generateKeyFunction(keys[i]);
	updateContent();
	
	function generateKeyFunction(key){
		return function(){
			document.getElementById("search").blur();
			document.getElementById("search").value += caps ? key.toUpperCase() : key;
			document.getElementById("search").focus();
			if(caps == 1){
				caps--;
				drawKeys();
			}
			updateSearch();
		}
	}

	function updateSearch(){
		typing++;
		setTimeout(function(){
			typing--;
			if(!typing) updateContent();
		}, 300)
	}

	function setPosition(x, y){
		cursor.style.left = `${x || cursorPosition[0]}px`;
		cursor.style.top = `${y || cursorPosition[1]}px`;
	}

	function drawKeys(){
		var keyelems = document.querySelectorAll("key");
		for(var i = 0; i < keys.length; i++) keyelems[i].innerText = caps ? keys[i].toUpperCase() : keys[i];
		keyelems[42].innerText = ["Shift", "Capslock", "Unlock Caps"][caps];
	}

	async function updateContent(){
		loading++;
		document.querySelector(".lds-ring").setAttribute("active", "1");
		document.querySelector("header > h1.title").innerText = channels[channel].title;
		document.querySelector("content > container").innerHTML = "";
		var cards = await channels[channel].search(document.getElementById("search").value);
		for(var i = 0; i < cards.length; i++){
			functions[`c${cards[i].id}`] = generateCardFunction(channels[channel].functionality, cards[i].id);
			var card = document.createElement("card");
			card.id = `c${cards[i].id}`;
			card.classList.add("selectable", "nohover");
			var img = document.createElement("img");
			img.src = cards[i].image;
			var title = document.createElement("text");
			title.innerText = cards[i].title;
			if(cards[i].subtitle) title.innerHTML += `: <subtitle>${cards[i].subtitle}</subtitle>`;

			card.appendChild(img);
			card.appendChild(title);
			document.querySelector("content > container").appendChild(card);
		}
		if(!--loading) document.querySelector(".lds-ring").setAttribute("active", "0");
	}

	function generateCardFunction(functionality, id){
		return () => functionality(id);
	}

</script>